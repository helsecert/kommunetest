#!/usr/bin/python3

import subprocess
from datetime import datetime
import socket
import requests
import traceback

RED = '\x1b[31m'
GREEN = '\x1b[32m'
RESET = '\x1b[0m'

pubkeys = [
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEezwRZ/3ZOfsi35jvePb8alK/lagZBU1EGUhB3A7P5r user@trypt",
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN7Ztzf90b8Gd9md3h1OfrlzjtY/Gu/DSNpSmHcQU5D8 torbjorn.smorgrav@nhn.no",
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIMf7teqmQIVscONsExCrZtQGP03fDH3qS7HGXCbTFopf user@scanbox",
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINK7BuWGPqOUtaPsnePSSpzl4ldolsvjiUomjDr4DZna olefredrik@olefredrikskali",
    "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDNbKkWGct+32GeJjdi8oh6P9t1+EGHyV2tkebUauLucNStuvUHv0VAb4ceUQh++Yf+MxJQmnP+h8tlz552KFNqVyzhJnr8OifgtU6kde8wyFO30WFFCkSDDljbQZNJUq0c9DTgdShKlMqoipZFaRwtvmUs9GB/L672TtYnaHSTYRjCVOvr4ZrXedmG52zOwTzU9glNXp2rMMDP2anwoaltk28oGFohtFG15Mu17HtzaEskFizJdmAmJXwpa/ggAdBYyHrhtzV8hqa+GhK87uXsz5+RyKt5TFf1ZGro5HRMc9kkOVvJlMm+zJS5Hbk0ol6c/DU74DTmw6iNhV3E6uyjRt8SHsKDJGN+nYCBE667wg1Aapq3VgKvOCRUs4HM2NuR1eJ9PHbzwTnMzTLOR93xoi9B9lQBXQ+MSE+cGRbOKfFJVi60E3h7i2PdmXdLzOWPdmKXorimWfQGrvTj5VNDfhUTWVPY0NvPQnYiSJhbFnxhyS4es7mxS6d+MUJsDdc= kali@kali",
    "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJdzxcKffxPaUHb6iEhuUQkTM67GfWJicOPTn+x1/mtL mihkal@toolbox"
]

def get_ipv4_by_hostname(hostname):
    return list(
        i[4][0] for i in socket.getaddrinfo(hostname, 0)
        if i[0] is socket.AddressFamily.AF_INET and i[1] is socket.SocketKind.SOCK_RAW
    )


def print_ok(*args, **kwargs):
    time = datetime.now().isoformat()[:19]
    OK = f"[{GREEN}OK{RESET}]   "
    print(time, OK, *args, **kwargs)


def print_error(*args, **kwargs):
    time = datetime.now().isoformat()[:19]
    ERROR = f"[{RED}ERROR{RESET}]"
    print(time, ERROR, *args, **kwargs)


def set_dns():
    raise Exception("Setting av DNS-server ikke implementert!")  # TODO


def start_tailscale_install(proxy):
    try:
        if not proxy:
            result = subprocess.run(["/bin/sh", "-c", "curl -fsSL https://tailscale.com/install.sh | sh"])
        else:
            result = subprocess.run(["/bin/sh", "-c", f"curl -x {proxy} -fsSL https://tailscale.com/install.sh | sh"])
    except Exception:
        print_error("Error while installing tailscale.")
        print(traceback.format_exc())


def setup_forwarding():
    try:
        commands = [
            "echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.d/10-ip-forwarding.conf",
            "echo 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.d/10-ip-forwarding.conf",
            "sudo sysctl -p /etc/sysctl.d/10-ip-forwarding.conf",
        ]
        for command in commands:
            result = subprocess.run(["/bin/sh", "-c", command])
        print_ok("IP forwarding enabled.")
    except Exception:
        print_error("Error while enabling forwarding.")
        print(traceback.format_exc())


def open_tailscale_tunnel(authkey, proxy):
    try:
        if not proxy:
            result = subprocess.run(["sh", "-c", f"sudo tailscale up --advertise-routes=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12 --auth-key={authkey}"])
        else:
            result = subprocess.run(["sh", "-c", f"https_proxy={proxy} sudo tailscale up --advertise-routes=10.0.0.0/8,192.168.0.0/16,172.16.0.0/12 --auth-key={authkey}"])
    except Exception:
        print_error("Error while starting tailscale.")
        print(traceback.format_exc())


def check_tailscale_status():
    try:
        result = subprocess.run(["sh", "-c", f"tailscale status"], check=True)
        return True
    except Exception:
        return False


def set_sudo_nopasswd():
    result = subprocess.run(["sh", "-c", f"echo `whoami` 'ALL=(ALL:ALL) NOPASSWD: ALL' | sudo tee -a /etc/sudoers"])
    

def install_sshd():
    try:
        result = subprocess.run(["sh", "-c", f"sudo apt install -y openssh-server"])
        result = subprocess.run(["sh", "-c", f"mkdir -p ~/.ssh"])
        result = subprocess.run(["sh", "-c", f"chmod 700 ~/.ssh"])
        for pubkey in pubkeys:
            result = subprocess.run(["sh", "-c", f"echo '{pubkey}' >> ~/.ssh/authorized_keys"])
        result = subprocess.run(["sh", "-c", f"chmod 600 ~/.ssh/authorized_keys"])
        result = subprocess.run(["sh", "-c", f"sudo service ssh start"])
        result = subprocess.run(["sh", "-c", f"sudo systemctl enable ssh"])
    except Exception:
        print_error("Error while installing sshd.")
        print(traceback.format_exc())


def main():
    print_ok("Sjekker lokale IP-adresser...")
    subprocess.run("ip -o a".split())

    print_ok("Sjekker DNS-tilgang: Prøver å slå opp paste.helsecert.no...")
    paste_ipaddr = get_ipv4_by_hostname("paste.helsecert.no")
    if len(paste_ipaddr) > 0:
        print_ok("Fikk følgende IP-adresser som DNS-svar:", paste_ipaddr)
    else:
        print_error("Fikk ingen IP-adresser som DNS-svar.")
        dns_server = input("Skriv inn IP-adresse til DNS-server (f.eks. domenekontroller): ")
        set_dns(dns_server)

    proxy = None
    print_ok("Sjekker offentlig ip-adresse gjennom https://httpbin.org/ip ...")
    try:
        response = requests.get('https://httpbin.org/ip')
        print_ok("Respons:", ''.join(line.strip() for line in response.text.splitlines()))
    except Exception:
        print_error("Klarte ikke koble til https://httpbin.org/ip")
        proxy = input("Skriv inn proxy-server for tilgang til internett (https://hostname:port/):")

    print_ok("Installerer SSH")
    install_sshd()

    print_ok("Setter opp sudo-rettigheter")
    set_sudo_nopasswd()

    print_ok("Installerer tailscale:")
    start_tailscale_install(proxy)
    setup_forwarding()
    tailscale_key = input("Tast inn authkey til VPN-tunnel, sendt på SMS fra HelseCERT: ")
    print_ok("Starter tailscale:")
    open_tailscale_tunnel(tailscale_key, proxy)

    if check_tailscale_status():
        print_ok("HURRA! VPN-tunnel er oppe.")
    else:
        print_error("Tailscale-feil. :-( Ta kontakt med HelseCERT eller finn ut hvilken del av skriptet ting gikk galt.")


if __name__ == "__main__":
    main()
